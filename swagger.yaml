swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get all the user's bank accounts
      description: API for fetching all the user's bank accounts
      produces:
        - application/json
      responses:
        '200':
          description: All the user's bank accounts retrieved successully
          schema:
            type: object
            items:
              type: string
            properties:
              accountName:
                type: string
              accountId:
                type: number
              balance:
                type: number
              accountDescription:
                type: string
        '404':
          description: 'Error: Not Found'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}:
    parameters:
        - name: accountId
          in: path
          description: the account's id
          required: true
          type: integer
          minimum: 1      
        - name: transactionId
          in: path
          description: the transaction's id
          required: true
          type: integer
          minimum: 1            
    get:
      tags:
        - User Module
      summary: Get transaction's id
      description: API to get the transaction's id
      operationId: getTransactionId
      responses:
        '200':
          description: Transaction retrieved successully
        '400':
          description: Bad request
        '404':
          description: Not found
            
    post:
      tags:
        - User Module
      summary: Update data
      description: API to update data
      operationId: updateData
      consumes:
       - application/json
      parameters:
        - in: body
          name: update data
          schema:
            type: object
            required:
              - valueLocation
              - newValue
            properties:
              valueLocation:
                type: string
              newValue:
                type: string
      responses:
        '200':
          description: Transaction updated successully
        '400':
          description: Bad request
          
    delete:
      tags:
        - User Module
      summary: Delete data
      description: API to delete data
      operationId: deleteData
      consumes:
        - application/json
      parameters:
        - in: body
          name: Delete data
          schema:
            type: object
            required:
              - valueLocation
              - valueToDelete
            properties:
              valueLocation:
                type: string
              valueToDelete:
                type: string
      responses:
        '200':
          description: Transaction deleted successfully
        '400':
          description: Bad request  
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string